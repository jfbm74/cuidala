{"remainingRequest":"/home/retr-0/cuidala/front-end/index/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/retr-0/cuidala/front-end/index/src/components/Navegacion.vue?vue&type=template&id=f451971e&","dependencies":[{"path":"/home/retr-0/cuidala/front-end/index/src/components/Navegacion.vue","mtime":1615506059815},{"path":"/home/retr-0/cuidala/front-end/index/node_modules/cache-loader/dist/cjs.js","mtime":1615255675933},{"path":"/home/retr-0/cuidala/front-end/index/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1615255673833},{"path":"/home/retr-0/cuidala/front-end/index/node_modules/cache-loader/dist/cjs.js","mtime":1615255675933},{"path":"/home/retr-0/cuidala/front-end/index/node_modules/vue-loader/lib/index.js","mtime":1615255673833}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}